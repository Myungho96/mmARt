# Adding workflow rules to avoid other branches to use the pipeline 
# since we only want to use the master branch
workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == 'master'

variables:
  IMAGE_OPENJDK_GRADLE: gradle:7.6.1-jdk17-alpine
  IMAGE_OPENJDK: openjdk:17-alpine

stages:
  - clean
  - build
  - package
  # - build-image
  # - publish-image
  # - deploy

clean:
  image: $IMAGE_OPENJDK_GRADLE
  stage: clean
  before_script:
  - cd backend/mmart
  - chmod +x gradlew
  script:
    - echo "Cleaning leftovers from previous builds"
    - ./gradlew clean

build:
  image: $IMAGE_OPENJDK
  stage: build
  needs:
    - job: clean
  before_script:
  - cd backend/mmart
  - chmod +x gradlew
  script:
    - echo "Compiling the code..."
    - ./gradlew build -x test
  artifacts:
    name: app.jar
    paths:
      - backend/mmart/build/libs/mmart-0.0.1-SNAPSHOT.jar

# static-code-analysis:
#   image: $IMAGE_OPENJDK_GRADLE
#   stage: test
#   before_script:
#     - cd backend/mmart
#     - chmod +x gradlew
#   script:
#     - echo "Running Static Code Analysis..."
#     - echo "Checking style..."
#     - ./gradlew checkstyleMain
#     - echo "Checking duplicated code..."
#     - ./gradlew cpdCheck
#     - echo "Checking bugs..."
#     - ./gradlew spotbugsMain
#     - echo "Checking code standard..."
#     - ./gradlew pmdMain

# unit-test:
#   image: $IMAGE_OPENJDK_GRADLE
#   stage: test
#   before_script:
#     - cd backend/mmart
#     - chmod +x gradlew
#   script:
#     - echo "Running unit tests..."
#     - ./gradlew test -Dspring.profiles.active=test

# coverage-test:
#   image: $IMAGE_OPENJDK_GRADLE
#   stage: test
#   needs:
#     - job: unit-test
#   script:
#     - echo "Running coverage tests..."

package:
  stage: build-image
  needs:
    - job: build
  before_script:
    - cd backend/mmart
  script:
    - echo "Building Docker Image..."
    - docker build -t teqteqteqteq/red-limo-backend:latest .
  after_script:
    - docker login -u teqteqteqteq -p Kty960626!
    - echo "Publishing Docker Image..."
    - docker push teqteqteqteq/red-limo-backend:latest
